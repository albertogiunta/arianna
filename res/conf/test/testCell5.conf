# Author: Xander_C@{alessandro.cevoli2@studio.unibo.it}
akka {
  actor {
    role = "Arianna-Slave"
    provider = "akka.cluster.ClusterActorRefProvider"
    # Enable only for tests
    #    serialize-creators = on

    serial-number = "5"

    serializers {
      java = "akka.serialization.JavaSerializer"
      custom = "akka.serialization.AriadneMessageSerializer"
    }

    serialization-bindings {
      "java.lang.String" = java
      "java.lang.Boolean" = java
      "ontologies.messages.AriadneMessage" = custom
      "ontologies.messages.Message" = custom
    }

    warn-about-java-serializer-usage = off
  }

  # What I've understood so far
  # The remote property defines the properties of the Actor(s) for which this configuration is used
  # It may differ from the one specified in seed-nodes only if you are not the Leader/Master,
  # as that is the port used to communicate with the cluster "manager"
  remote {
    log-remote-lifecycle-events = off
    log-sent-messages = on
    log-received-messages = on
    netty.tcp {
      hostname = "127.0.0.1"
      port = 25525
    }
  }

  log-dead-letters = 10
  log-dead-letters-during-shutdown = no# event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]

  loglevel = "INFO"
  debug {
    # enable function of LoggingReceive, which is to log any received message at
    # DEBUG level
    receive = on
  }

  cluster {
    # What I've understood so far
    # Seed nodes are the "Leader(s)/Master(s)" of the Cluster,
    # i.e. The Provided Akka Cluster Framework is of Master/Slave Type,
    # where the Master(s) are the entity of the system that provide a Join Point
    # for the Salve Actors
    seed-nodes = [
      "akka.tcp://Arianna-Cluster@127.0.0.1:25520"
      # If used to communicate with remote networks
      # the use the public IP of the machine where the nodes are deployed onto
    ]

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    #
    # auto-down-unreachable-after = 10s

    # Disable legacy metrics in akka-cluster.
    metrics.enabled = off

    #use-dispatcher = cluster-dispatcher

    # Sigar native library extract location during tests.
    # Note: use per-jvm-instance folder when running multiple jvm on one host.
    #metrics.native-library-extract-folder = ${user.dir}/target/native
  }

  # Enable metrics extension in akka-cluster-metrics.
  extensions = [
    "akka.extension.ConfigurationManager",
    "akka.cluster.metrics.ClusterMetricsExtension",
    "akka.cluster.pubsub.DistributedPubSub"
  ]
}

#######################################################################################################################

# Blocking Dispatcher for Akka-http Server
http-akka-blocking-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    // or in Akka 2.4.2+
    fixed-pool-size = 16
  }
  throughput = 100
}

cluster-dispatcher {
  type = "Dispatcher"
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 1
    parallelism-max = 4
  }
}